// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "get application info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "info"
                ],
                "summary": "Show the application info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.RootResponse"
                        }
                    }
                }
            }
        },
        "/copyKey": {
            "post": {
                "description": "Copy a session key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "session"
                ],
                "summary": "Copy a session key",
                "parameters": [
                    {
                        "description": "Public key and key ID",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CopyKeyRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.CopyResponseBody"
                        }
                    }
                }
            }
        },
        "/finalizeSign": {
            "post": {
                "description": "Finalize a signature",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "session"
                ],
                "summary": "Finalize a signature",
                "parameters": [
                    {
                        "description": "Pre-signature ID, message hash, and key ID",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.FinalizSignRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.FinalizeSignResponseBody"
                        }
                    }
                }
            }
        },
        "/generateKey": {
            "post": {
                "description": "Generate a session key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "session"
                ],
                "summary": "Generate a session key",
                "parameters": [
                    {
                        "description": "Public key",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.GenerateKeyRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.GenerateKeyResponseBody"
                        }
                    }
                }
            }
        },
        "/preSign": {
            "post": {
                "description": "Pre-sign a message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "session"
                ],
                "summary": "Pre-sign a message",
                "parameters": [
                    {
                        "description": "Public key and key ID",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.PreSignRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.PreSignReponseBody"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.CopyKeyRequestBody": {
            "type": "object",
            "required": [
                "keyId",
                "publicKey"
            ],
            "properties": {
                "keyId": {
                    "type": "string",
                    "example": "zUhWR7jvWJoplMyFf35NHSdZXbtx"
                },
                "publicKey": {
                    "type": "string",
                    "example": "MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE2Bk6ZSVUhIStsXZsqyYidPy8vEQvLDVQ/YRgfgowgWFualE748OFoGwuGgE8C7L2zV4gX+1Ow1x/OTjqSSlh5A=="
                }
            }
        },
        "handlers.CopyResponseBody": {
            "type": "object",
            "required": [
                "sessionId"
            ],
            "properties": {
                "sessionId": {
                    "type": "string"
                }
            }
        },
        "handlers.FinalizSignRequestBody": {
            "type": "object",
            "required": [
                "keyId",
                "messageHash",
                "preSignatureId"
            ],
            "properties": {
                "keyId": {
                    "type": "string",
                    "example": "zUhWR7jvWJoplMyFf35NHSdZXbtx"
                },
                "messageHash": {
                    "type": "string",
                    "example": "zUhWR7jvWJoplMyFf35NHSdZXbtx"
                },
                "preSignatureId": {
                    "type": "string",
                    "example": "zUhWR7jvWJoplMyFf35NHSdZXbtx"
                }
            }
        },
        "handlers.FinalizeSignResponseBody": {
            "type": "object",
            "required": [
                "partialSignResult"
            ],
            "properties": {
                "partialSignResult": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"zUhWR7jvWJoplMyFf35NHSdZXbtx\"]"
                    ]
                }
            }
        },
        "handlers.GenerateKeyRequestBody": {
            "type": "object",
            "required": [
                "publicKey"
            ],
            "properties": {
                "publicKey": {
                    "type": "string",
                    "example": "MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE2Bk6ZSVUhIStsXZsqyYidPy8vEQvLDVQ/YRgfgowgWFualE748OFoGwuGgE8C7L2zV4gX+1Ow1x/OTjqSSlh5A=="
                }
            }
        },
        "handlers.GenerateKeyResponseBody": {
            "type": "object",
            "required": [
                "sessionId"
            ],
            "properties": {
                "sessionId": {
                    "type": "string"
                }
            }
        },
        "handlers.PreSignReponseBody": {
            "type": "object",
            "required": [
                "sessionId"
            ],
            "properties": {
                "sessionId": {
                    "type": "string"
                }
            }
        },
        "handlers.PreSignRequestBody": {
            "type": "object",
            "required": [
                "keyId",
                "publicKey"
            ],
            "properties": {
                "keyId": {
                    "type": "string",
                    "example": "zUhWR7jvWJoplMyFf35NHSdZXbtx"
                },
                "publicKey": {
                    "type": "string",
                    "example": "MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE2Bk6ZSVUhIStsXZsqyYidPy8vEQvLDVQ/YRgfgowgWFualE748OFoGwuGgE8C7L2zV4gX+1Ow1x/OTjqSSlh5A=="
                }
            }
        },
        "main.RootResponse": {
            "type": "object",
            "properties": {
                "build_type": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.0.1",
	Host:             "localhost:3000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "ABC Core BTC API",
	Description:      "ABC Core BTC API v0.0.1",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
